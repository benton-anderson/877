---
title: "R Notebook"
output: html_notebook
---
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*.
```{r}
plot(cars)
plot(cars)
pbmc <- read.csv(file="PBMC_COVID_NormExp.csv")
pbmc <- read.csv(file="/PBMC_COVID_NormExp.csv")
cd Desktop
cd
setwd(dir = '~/Desktop/classes/877')
setwd(dir = 'C:/Users/bjanderson23/Desktop/classes/877')
pbmc <- read.csv(file="/PBMC_COVID_NormExp.csv")
a549 <- read.csv(file = "PBMC_COVID_NormExp.csv")
pbmc <- read.csv(file="PBMC_COVID_NormExp.csv")
nhbe <- read.csv(file='NHBE_COVID_NormExp.csv')
pbmc
head(pbmc)
cols(pbmc)
col(pbmc)
columns(pbmc)
column(pbmc)
row.names(pbmc)
colnames(pbmc)
data(GeneMat)
library(EBSeq)
data(GeneMat)
genemat
genemat <- data(GeneMat)
genemat
GeneMat
View(pbmc)
Sizes <- MedianNorm(pbmc)
GeneMat
Sizes <- MedianNorm(Data = pbmc)
head(pbmc)
?read.csv
Sizes <- MedianNorm(Data = pbmc[,-1])
Sizes
as.factor(rep(c("C1","C2"),each=5))
EBOut <- EBTest(Data=pbmc, Conditions = conditions, sizeFactors = Sizes)
EBOut <- EBTest(Data=pbmc, Conditions = conditions, sizeFactors = Sizes, maxround=5)
conditions <- as.factor(c('C1', 'C1', 'C1', 'C2', 'C2', 'C2'))
EBOut <- EBTest(Data=pbmc, Conditions = conditions, sizeFactors = Sizes, maxround=5)
EBOut <- EBTest(Data=pbmc[, -1], Conditions = conditions, sizeFactors = Sizes, maxround=5)
EBOut <- EBTest(Data=as.matrix(pbmc), Conditions = conditions, sizeFactors = Sizes, maxround=5)
pbmc[1]
head(pbmc[1])
EBOut <- EBTest(Data=as.matrix(pbmc, rownames.force = pbmc[1]), Conditions = conditions, sizeFactors = Sizes, maxround=5)
as.matrix(pbmc)
EBOut <- EBTest(Data=as.matrix(pbmc[, -1], rownames.force = pbmc[1]), Conditions = conditions, sizeFactors = Sizes, maxround=5)
as.matrix(pbmc[, -1])
as.matrix(pbmc[, -1], rownames.force = pbmc[1])
as.matrix(pbmc[, -1], rownames.force = pbmc[1])
EBOut <- EBTest(Data=as.matrix(pbmc[, -1]), Conditions = conditions, sizeFactors = Sizes, maxround=5)
pbmc_matrix <- as.matrix(pbmc[, -1])
rownames(pbmc_matrix) <- pbmc[1]
rownames(pbmc_matrix) <- c('cols') + pbmc[1]
rownames(pbmc_matrix) <- pbmc[1]
length(pbmc_matrix)
length(pbmc[1])
length(pbmc[, 1])
rownames(pbmc_matrix) <- pbmc[, 1]
EBOut <- EBTest(Data=as.matrix(pbmc[, -1]), Conditions = conditions, sizeFactors = Sizes, maxround=5)
pbmc_matrix
GeneMat
View(GeneMat)
View(GeneMat)
View(pbmc_matrix)
View(pbmc_matrix)
pbmc_matrix <- as.matrix(pbmc[, -1])
rownames(pbmc_matrix) <- pbmc[, 1]
pbmc_matrix
EBOut <- EBTest(Data=as.matrix(pbmc[, -1]), Conditions = conditions, sizeFactors = Sizes, maxround=5)
EBOut <- EBTest(Data=pbmc_matrix, Conditions = conditions, sizeFactors = Sizes, maxround=5)
EBOut
View(EBOut)
View(EBOut)
pbmc <- read.csv(file="PBMC_COVID_NormExp.csv", row.names = 1)
nhbe <- read.csv(file='NHBE_COVID_NormExp.csv', row.names = 1)
a549 <- read.csv(file = "A549_COVID_NormExp.csv", row.names = 1)
source("C:/Users/bjanderson23/Desktop/classes/877/hw3_script.R", echo=TRUE)
EBOut <- EBTest(Data=pbmc, Conditions = conditions, sizeFactors = Sizes, maxround=5)
EBOut <- EBTest(Data=as.matrix(pbmc), Conditions = conditions, sizeFactors = Sizes, maxround=5)
as.matrix(pbmc)
test_pbmc_matrix <- as.matrix(pbmc)
View(test_pbmc_matrix)
pbmc_matrix <- as.matrix(pbmc)
EBOut <- EBTest(Data=pbmc_matrix, Conditions = conditions, sizeFactors = Sizes, maxround=5)
# Matrix is like a numpy array, all values must be the same dtype.
# So if you convert a df with row names into matrix, you have to
pbmc_matrix <- as.matrix(pbmc[, -1])
rownames(pbmc_matrix) <- pbmc[, 1]
pbmc_matrix
EBOut <- EBTest(Data=pbmc_matrix, Conditions = conditions, sizeFactors = Sizes, maxround=5)
conditions <- as.factor(c('C1', 'C1', 'C1', 'C2', 'C2', 'C2'))
EBOut <- EBTest(Data=pbmc_matrix, Conditions = conditions, sizeFactors = Sizes, maxround=5)
Sizes <- MedianNorm(Data = pbmc[,-1])
EBOut <- EBTest(Data=pbmc_matrix, Conditions = conditions, sizeFactors = Sizes, maxround=5)
EBOut
pbmc_matrix
# Matrix is like a numpy array, all values must be the same dtype.
# So if you convert a df with row names into matrix, you have to
pbmc_matrix <- as.matrix(pbmc[, -1])
rownames(pbmc_matrix) <- pbmc[, 1]
pbmc_matrix
pbmc <- read.csv(file="PBMC_COVID_NormExp.csv", row.names = 1)
pbmc_m <- as.matrix(pbmc)
pbmc_m
EBOut <- EBTest(Data=pbmc_m, Conditions = conditions, sizeFactors = Sizes, maxround = 5)
View(pbmc_m)
pbmc <- read.csv(file="PBMC_COVID_NormExp.csv")
nhbe <- read.csv(file='NHBE_COVID_NormExp.csv')
a549 <- read.csv(file = "A549_COVID_NormExp.csv")
conditions <- as.factor(c('C1', 'C1', 'C1', 'C2', 'C2', 'C2'))
Sizes <- MedianNorm(Data = pbmc[,-1])
Sizes
# Matrix is like a numpy array, all values must be the same dtype.
# So if you convert a df with row names into matrix, you have to
pbmc_matrix <- as.matrix(pbmc[, -1])
rownames(pbmc_matrix) <- pbmc[, 1]
pbmc_matrix
EBOut <- EBTest(Data=pbmc_m, Conditions = conditions, sizeFactors = Sizes, maxround = 5)
EBDERes <- GetDEResults(EBOut, FBR=0.05)
str(EBDERes$DEfound)
EBDERes <- GetDEResults(EBOut, FDR=0.05)
str(EBDERes$DEfound)
head(EBDERes$PPMat)
head(EBDERes$PPMat, 20)
EBDERes5 <- GetDEResults(EBOut, FDR=0.05)
EBDERes10 <- GetDEResults(EBOut, FDR=0.1)
str(EBDERes5$DEfound)
str(EBDERes10$DEfound)
length(str(EBDERes10$DEfound))
length((EBDERes10$DEfound))
str(EBDRes$Status)
str(EBDERes$Status)
sizes
Sizes
