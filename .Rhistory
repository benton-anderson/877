apply(GeneMat, 2, median)
apply(GeneMat, 2, median) / 371.5
MedianNorm(GeneMat)
# 3. Show diagnostic plots
QQP(EBOut)
# 3. Show diagnostic plots
par(mfrow=c(1,2))
QQP(EBOut)
DenNHist(EBOut)
str(GeneFC)
GeneFC <- PostFC(EBOut)
str(GeneFC)
PlotPostVsRawFC(EBOut, GeneFC)
axis(2, at=c(-4, -3, -2, -1, 0, 1, 2, 3, 4, 5))
PlotPostVsRawFC(EBOut, GeneFC)
axis(2, at=c(-4, -3, -2, -1, 0, 1, 2, 3, 4, 5))
PlotPostVsRawFC(EBOut, GeneFC)
a549 <- a549[common_genes,]
nhbe <- nhbe[common_genes,]
combined <- cbind(a549, nhbe)
combined <- as.matrix(combined)
str(combined)
head(combined)
colnames(combined)
combined
colnames(combined)
colnames(combined)
combined$X
combined["X"]
combined[,"X"]
a549 <- a549[common_genes,]
nhbe <- nhbe[common_genes,]
combined <- cbind(a549, nhbe)
combined <- as.matrix(combined)
str(combined)
head(combined)
colnames(combined)
head(combined[,"X"])
combined
head(combined)
conditions_4group <- as.factor(c('C1', 'C1', 'C1',
'C2', 'C2', 'C2',
'C3', 'C3', 'C3',
'C4', 'C4', 'C4'))
conditions_4group
Sizes <- MedianNorm(combined)
nhbe <- read.csv(file='C:\\Users\\bjanderson23\\Desktop\\classes\\877\\NHBE_COVID_NormExp.csv', row.names=1)
a549 <- read.csv(file = "C:\\Users\\bjanderson23\\Desktop\\classes\\877\\A549_COVID_NormExp.csv", row.names=1)
a549 <- a549[common_genes,]
nhbe <- nhbe[common_genes,]
combined <- cbind(a549, nhbe)
combined <- as.matrix(combined)
str(combined)
head(combined)
nhbe <- read.csv(file='C:\\Users\\bjanderson23\\Desktop\\classes\\877\\NHBE_COVID_NormExp.csv', row.names=1)
a549 <- read.csv(file = "C:\\Users\\bjanderson23\\Desktop\\classes\\877\\A549_COVID_NormExp.csv", row.names=1)
nhbe
a549
common_genes <- intersect(rownames(A549_dat), rownames(NHBE_dat))
common_genes <- intersect(rownames(a549), rownames(nhbe))
a549 <- a549[common_genes,]
nhbe <- nhbe[common_genes,]
combined <- cbind(a549, nhbe)
combined <- as.matrix(combined)
str(combined)
head(combined)
head(combined, 1)
conditions_4group <- as.factor(c('C1', 'C1', 'C1',
'C2', 'C2', 'C2',
'C3', 'C3', 'C3',
'C4', 'C4', 'C4'))
Sizes <- MedianNorm(combined)
Sizes
Sizes <- MedianNorm(Data = pbmc[,-1])
Sizes
Sizes_4group <- MedianNorm(combined)
Sizes_4group
conditions_4group <- as.factor(c('C1', 'C1', 'C1',
'C2', 'C2', 'C2',
'C3', 'C3', 'C3',
'C4', 'C4', 'C4'))
Sizes_4group <- MedianNorm(combined)
Sizes_4group
EBOut <- EBTest(Data=combined, Conditions = conditions_4group, sizeFactors = Sizes_4group, maxround = 5)
EBOut <- EBMultiTest(Data=combined, Conditions = conditions_4group, sizeFactors = Sizes_4group, maxround = 5)
View(combined)
EBOut
length(combined)
nhbe <- read.csv(file='C:\\Users\\bjanderson23\\Desktop\\classes\\877\\NHBE_COVID_NormExp.csv', row.names=1)
lengh(nhbe)
length(nhbe)
shape(nhbe)
length(nhbe[, 1])
common_genes <- intersect(rownames(a549), rownames(nhbe))
nhbe <- read.csv(file='C:\\Users\\bjanderson23\\Desktop\\classes\\877\\NHBE_COVID_NormExp.csv', row.names=1)
length(nhbe[, 1])
a549 <- read.csv(file = "C:\\Users\\bjanderson23\\Desktop\\classes\\877\\A549_COVID_NormExp.csv", row.names=1)
common_genes <- intersect(rownames(a549), rownames(nhbe))
length(common_genes)
a549 <- a549[common_genes,]
nhbe <- nhbe[common_genes,]
combined <- cbind(a549, nhbe)
combined <- as.matrix(combined)
length(combined)
nhbe <- read.csv(file='C:\\Users\\bjanderson23\\Desktop\\classes\\877\\NHBE_COVID_NormExp.csv', row.names=1)
length(nhbe[, 1])
a549 <- read.csv(file = "C:\\Users\\bjanderson23\\Desktop\\classes\\877\\A549_COVID_NormExp.csv", row.names=1)
common_genes <- intersect(rownames(a549), rownames(nhbe))
length(common_genes)
a549 <- a549[common_genes,]
nhbe <- nhbe[common_genes,]
combined <- cbind(a549, nhbe)
length(combined)
length(combined[, 1])
combined <- as.matrix(combined)
length(combined[, 1])
length(combined)
PosParti(conditions_4group)
GetPatterns(conditions_4group)
EBOut <- EBMultiTest(Data=combined, Conditions = conditions_4group, sizeFactors = Sizes_4group, maxround = 1)
Sizes <- MedianNorm(Data = pbmc[,-1])
Sizes
EBOut
fourgroup5 <- GetDEResults(EBOut, FDR=0.05)
fourgroup10 <- GetDEResults(EBOut, FDR=0.1)
str(fourgroup5$DEfound)
str(fourgroup10$DEfound)
GetPatterns(conditions_4group)
multipp <- GetMultiPP(EBOut)
multipp
names)multipp)
names(multipp)
multipp$PP
multipp$MAP
multipp$Patterns
multipp$PP
multipp$Patterns
multipp$PP
pps[2:]
pps[, -1]
pps <- multipp$PP
pps[, -1]
apply(pps[, -1], 1, sum)
apply(pps[, -1], 2, sum)
apply(pps[, -1], 1, sum)
df[df > 0.95]
df[df[1] > 0.95]
df[1]
df[, 1]
df[, ]
type(df)
typeof(df)
df <- as.data.frame(apply(pps[, -1], 1, sum))
df[df[1] > 0.95]
length(df[df[1] > 0.95])
length(df[df[1] > 0.90])
library(EBSeq)
pbmc <- read.csv(file="C:\\Users\\bjanderson23\\Desktop\\classes\\877\\PBMC_COVID_NormExp.csv")
pbmc <- read.csv(file="C:\\Users\\bjanderson23\\Desktop\\classes\\877\\hw3\\PBMC_COVID_NormExp.csv")
str(EBDERes5$DEfound)
pbmc <- read.csv(file="C:\\Users\\bjanderson23\\Desktop\\classes\\877-stats\\hw3\\PBMC_COVID_NormExp.csv")
common_genes <- intersect(rownames(a549), rownames(nhbe))
genemat <- data(GeneMat)
GeneMat
conditions <- as.factor(c('C1', 'C1', 'C1', 'C2', 'C2', 'C2'))
Sizes <- MedianNorm(Data = pbmc[,-1])
Sizes
# Matrix is like a numpy array, all values must be the same dtype.
# So if you convert a df with row names into matrix, you have to
pbmc_matrix <- as.matrix(pbmc[, -1])
rownames(pbmc_matrix) <- pbmc[, 1]
pbmc_matrix
EBOut2group <- EBTest(Data=pbmc_matrix, Conditions = conditions, sizeFactors = Sizes, maxround = 5)
EBOut2group
EBDERes5 <- GetDEResults(EBOut2group, FDR=0.05)
EBDERes10 <- GetDEResults(EBOut2group, FDR=0.1)
str(EBDERes5$DEfound)
str(EBDERes5$DEfound)
str(EBDERes10$DEfound)
# PPMat = Posterior Probabilities Matrix
# PPMat contains PPEE and PPDE
#  EE = Equivalently expressed, DE = Differentially Expressed
head(EBDERes5$PPMat, 20)
# PPMat = Posterior Probabilities Matrix
# PPMat contains PPEE and PPDE
#  EE = Equivalently expressed, DE = Differentially Expressed
head(EBDERes5$PPMat, 20)
EBDERes5$DEfound
qn <- QuantileNorm(GeneMat, 0.99)
apply(GeneMat, 2, median) / 371.5
MedianNorm(GeneMat)
GeneFC <- PostFC(EBOut)
str(GeneFC)
PlotPostVsRawFC(EBOut, GeneFC)
nhbe <- read.csv(file='C:\\Users\\bjanderson23\\Desktop\\classes\\877\\NHBE_COVID_NormExp.csv', row.names=1)
length(nhbe[, 1])
a549 <- read.csv(file = "C:\\Users\\bjanderson23\\Desktop\\classes\\877\\A549_COVID_NormExp.csv", row.names=1)
nhbe <- read.csv(file='C:\\Users\\bjanderson23\\Desktop\\classes\\877-stats\\hw3\\NHBE_COVID_NormExp.csv', row.names=1)
length(nhbe[, 1])
a549 <- read.csv(file = "C:\\Users\\bjanderson23\\Desktop\\classes\\877-stats\\hw3\\A549_COVID_NormExp.csv", row.names=1)
common_genes <- intersect(rownames(a549), rownames(nhbe))
length(common_genes)
a549 <- a549[common_genes,]
nhbe <- nhbe[common_genes,]
combined <- cbind(a549, nhbe)
combined <- as.matrix(combined)
str(combined)
head(combined, 1)
conditions_4group <- as.factor(c('C1', 'C1', 'C1',
'C2', 'C2', 'C2',
'C3', 'C3', 'C3',
'C4', 'C4', 'C4'))
patterns <- GetPatterns(conditions_4group)
Sizes_4group <- MedianNorm(combined)
Sizes_4group
EBOut <- EBMultiTest(Data=combined,
Conditions = conditions_4group,
sizeFactors = Sizes_4group,
maxround = 1)
EBOut
str(EBDERes5$Status)
EBDERes5$DEfound
str(EBDERes5$DEfound)
write.csv(x = EBDERes5, file="C:\\Users\\bjanderson23\\Desktop\\classes\\877-stats\\hw4\\fdr5.csv)
str(EBDERes10$DEfound)
EBDERes5$DEfound
# PPMat = Posterior Probabilities Matrix
# PPMat contains PPEE and PPDE
#  EE = Equivalently expressed, DE = Differentially Expressed
head(EBDERes5$PPMat, 20)
str(EBDERes5$Status)
qn <- QuantileNorm(GeneMat, 0.99)
apply(GeneMat, 2, median) / 371.5
MedianNorm(GeneMat)
# 3. Show diagnostic plots
GeneFC <- PostFC(EBOut)
str(GeneFC)
PlotPostVsRawFC(EBOut, GeneFC)
# The y-axis is the fold change of the raw data. Posterior FC is the adjusted fold change
# There are two lines that deviate from y=x, and they have relatively high ranks (given by green color).
# The tutorial vignette states that the posterior FC tends to shrink genes with low expressions (small rank).
# But we see that relatively high ranked genes are shifted. I don't use R, so I can't dig into why that is and which genes are deviating.
par(mfrow=c(1,2))
QQP(EBOut)
# The data points lie near to the y=x line, which suggests that using a Beta prior is appropriate.
# There is a mild deviation on Condition 1 plot near 0.8, but I'm unsure whether that suggests any problem.
DenNHist(EBOut)
# The fitted density closely matches the empirical distribution, suggesting that our distribution
# The fitted line refers to the alpha and beta
# parameters of the Beta distribution, given at the bottom of the plot.
# If there is a large deviation from the fitted line, what does that say about our experiment? Bad experimental design? Bad sequencing run?
# What does a poorly fitted empirical distribution look like?
## Four group comparison
nhbe <- read.csv(file='C:\\Users\\bjanderson23\\Desktop\\classes\\877-stats\\hw3\\NHBE_COVID_NormExp.csv', row.names=1)
length(nhbe[, 1])
a549 <- read.csv(file = "C:\\Users\\bjanderson23\\Desktop\\classes\\877-stats\\hw3\\A549_COVID_NormExp.csv", row.names=1)
common_genes <- intersect(rownames(a549), rownames(nhbe))
length(common_genes)
a549 <- a549[common_genes,]
nhbe <- nhbe[common_genes,]
combined <- cbind(a549, nhbe)
combined <- as.matrix(combined)
str(combined)
head(combined, 1)
conditions_4group <- as.factor(c('C1', 'C1', 'C1',
'C2', 'C2', 'C2',
'C3', 'C3', 'C3',
'C4', 'C4', 'C4'))
patterns <- GetPatterns(conditions_4group)
Sizes_4group <- MedianNorm(combined)
Sizes_4group
EBOut <- EBMultiTest(Data=combined,
Conditions = conditions_4group,
sizeFactors = Sizes_4group,
maxround = 1)
EBOut
multipp <- GetMultiPP(EBOut)
names(multipp)
multipp$PP
pps <- multipp$PP
df <- as.data.frame(apply(pps[, -1], 1, sum))
length(df[df[1] > 0.95])
length(df[df[1] > 0.90])
write.csv(x = EBDERes5, file="C:\\Users\\bjanderson23\\Desktop\\classes\\877-stats\\hw4\\fdr5.csv")
EBDERes5
EBDERes5.head(10)
EBDERes5.head()
head(EBDERes5)
head(EBDERes5, 10)
sort(EBDERes5)
columns(EBDERes5)
cols(EBDERes5)
col(EBDERes5)
colnames(EBDERes5)
rownames(EBDERes5)
EBDERes5 <- GetDEResults(EBOut2group, FDR=0.05)
rownames(EBDERes5)
summary(EBDERes5)
summary(EBDERes5$DEfound)
colnames(EBDERes5$DEfound)
rownames(EBDERes5$DEfound)
EBDERes5$DEfound
EBDERes5$PPMat
head(EBDERes5$PPMat, 10)
order(EBDERes5$PPMat$PPDE, )
order(EBDERes5$PPMat, )
order(EBDERes5$PPMat)
library(dplyr)
EBDERes5$PPMat
EBDERes5$PPMat
EBDERes5$PPMat %>% arrange(PPDE)
# PPMat = Posterior Probabilities Matrix
# PPMat contains PPEE and PPDE
#  EE = Equivalently expressed, DE = Differentially Expressed
head(EBDERes5$PPMat, 5)
typeof(EBDERes5$PPMat)
typeof(EBDERes5$PPMat$PPDE)
is.data.frame(EBDERes5$PPMat)
?double
colnames(EBDERes5$PPMat)
colnames(EBDERes5$PPMat[1])
colnames(EBDERes5$PPMat[0])
colnames(EBDERes5$PPMat[, 0])
EBDERes5$PPMat[, 0]
head(EBDERes5$PPMat[, 1], 5)
head(EBDERes5$PPMat[1], 5)
head(EBDERes5$PPMat[2], 5)
head(EBDERes5$PPMat[3], 5)
head(EBDERes5$PPMat[, c(5,10)], 5)
head(EBDERes5$PPMat[, c(1,2)], 5)
head(EBDERes5$PPMat[, 2], 5)
order(EBDERes5$PPMat[, 2], 5)
order(EBDERes5$PPMat[, 2])
EBDERes5$PPMat[, 2] %>% arrange("PPDE")
write.csv(x = EBDERes5$$PPMat, file="C:\\Users\\bjanderson23\\Desktop\\classes\\877-stats\\hw4\\fdr5.csv")
write.csv(x = EBDERes5$PPMat, file="C:\\Users\\bjanderson23\\Desktop\\classes\\877-stats\\hw4\\fdr5.csv")
head(EBDERes5$DEfound, 5)
head(EBDERes5$DEfound)
(EBDERes5$DEfound)
(EBDERes5$Status)
size(EBDERes5$Status)
dim(EBDERes5$Status)
length(EBDERes5$Status)
head(EBDERes5$Status)
library(spatialLIBD)
library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(dplyr)
library(sctransform)
library(Dino)
library(Matrix)
library(here)
options(max.print=100)
# Get the sce data from spatialLIBD
ehub <- ExperimentHub::ExperimentHub()
sce <- fetch_data(type = "sce", eh = ehub)
scecounts
scecounts <- assays(sce)$counts
scecounts
colData(scecounts)
sce
### Get the column indices for the 6 columns
spatialLIBD::
colData(sce)
### Get the column indices for the 6 columns
spatialLIBD::
typeof(colData(sce))
### Get the column indices for the 6 columns
spatialLIBD::
coldata <- colData(sce)
coldata
sample_names <- c(151507, 151508, 151669, 151670, 151673, 151674)
coldata[coldata$sample_name %in% sample_names]
coldata[, coldata$sample_name %in% sample_names]
coldata$sample_name
coldata
f <- scecounts[, coldata$sample_name %in% c(151507, 151669, 151673)]
for (sample in sample_names){
print(sample)
}
for (sample in sample_names){
print(sample)
}
for (sample in sample_names){
print(sample)
break
}
for (sample in sample_names){
print(sample)
print(scecounts[, coldata$sample_name == sample])
break
}
### Get the column indices for the 6 columns
sample_names <- c(151507, 151508, 151669, 151670, 151673, 151674)
f <- scecounts[, coldata$sample_name %in% sample_names]
dim(f)
rs <- rowSums(f) > 100
table(rs)
rs <- rowSums(f) >= 200
table(rs)
rs <- rowSums(f) >= 500
table(rs)
rs <- rowSums(f) >= 5000
table(rs)
dim(f)
scecounts <- scecounts[, coldata$sample_name %in% sample_names]
dim(scecounts)
rowsums <- rowSums(scecounts) >= 5000
table(rowsums)
for (sample in sample_names){
print(sample)
print(scecounts[rowsums, coldata$sample_name == sample])
break
}
scecounts[rowsums]
scecounts[rowsums, ]
coldata <- colData(sce)
coldata <- coldata[, coldata$sample_name %in% sample_names]
coldata <- colData(sce)
dim(coldata)
coldata <- coldata[coldata$sample_name %in% sample_names]
dim(coldata)
coldata <- colData(sce)
dim(coldata)
coldata <- coldata[coldata$sample_name %in% sample_names]
coldata[coldata$sample_name %in% sample_names]
coldata$sample_name
coldata[coldata$sample_name %in% sample_names, ]
coldata <- colData(sce)
dim(coldata)
coldata <- [coldata$sample_name %in% sample_names, ]
coldata <- coldata[coldata$sample_name %in% sample_names, ]
for (sample in sample_names){
print(sample)
print(scecounts[rowsums, coldata$sample_name == sample])
break
}
rowsums <- rowSums(scecounts) > 5000
table(rowsums)
coldata <- colData(sce)
dim(coldata)
coldata <- coldata[coldata$sample_name %in% sample_names, ]
coldata$sample_name
for (sample in sample_names){
print(sample)
print(scecounts[rowsums, coldata$sample_name == sample])
break
}
test <- 'asdf'
paste(test, 151507)
paste(test, 151507, sep="")
paste(test, 151507, sep="")
paste(test, 151507, sep="")
paste(test, 151507, sep="")
for (sample in sample_names) {
print(sample)
data_subset <- scecounts[rowsums, coldata$sample_name == sample])
seuratobject <- CreateSeuratObject(data_subset)
sct_norm_matrix <- as.matrix(GetAssayData(SCTransform(seuratobject)))
sct_filepath <- paste(here(), "/project/data/", sample, "_SCT_norm_sparse.mtx", sep = "")
write.csv(sct_norm_matrix, file = sct_filepath)
break
}
for (sample in sample_names) {
print(sample)
data_subset <- scecounts[rowsums, coldata$sample_name == sample])
seuratobject <- CreateSeuratObject(data_subset)
sct_norm_matrix <- as.matrix(GetAssayData(SCTransform(seuratobject)))
sct_filepath <- paste(here(), "/project/data/", sample, "_SCT_norm_sparse.mtx", sep = "")
write.csv(sct_norm_matrix, file = sct_filepath)
break
}
for (sample in sample_names) {
print(sample)
data_subset <- scecounts[rowsums, coldata$sample_name == sample])
seuratobject <- CreateSeuratObject(data_subset)
sct_norm_matrix <- as.matrix(GetAssayData(SCTransform(seuratobject)))
sct_filepath <- paste(here(), "/project/data/", sample, "_SCT_norm_sparse.mtx", sep = "")
write.csv(sct_norm_matrix, file = sct_filepath)
break
}
for (sample in sample_names) {
print(sample)
data_subset <- scecounts[rowsums, coldata$sample_name == sample]
seuratobject <- CreateSeuratObject(data_subset)
sct_norm_matrix <- as.matrix(GetAssayData(SCTransform(seuratobject)))
sct_filepath <- paste(here(), "/project/data/", sample, "_SCT_norm_sparse.mtx", sep = "")
write.csv(sct_norm_matrix, file = sct_filepath)
break
}
here()
library(here)
here()
here("data")
here::i_am()
here::i_am("notebooks")
here::here("notebooks")
here::here()
here::here()
here::set_here()
dr_here()
file.path()
setwd("C:\\users\\bjanderson23\\desktop")
dr_here()
setwd("C:\\users\\bjanderson23\\desktop\\classes\\877")
dr_here()
here::i_am90
here::i_am()
here::i_am("notebooks")
here()
